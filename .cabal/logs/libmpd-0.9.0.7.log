cabal: Entering directory '/tmp/cabal-tmp-30357/libmpd-0.9.0.7'
Configuring libmpd-0.9.0.7...
Building libmpd-0.9.0.7...
Preprocessing library libmpd-0.9.0.7...
[ 1 of 36] Compiling Network.MPD.Util ( src/Network/MPD/Util.hs, dist/build/Network/MPD/Util.o )

src/Network/MPD/Util.hs:53:16: warning: [-Wdeprecations]
    In the use of ‘parseTime’
    (imported from Data.Time.Format, but defined in time-1.6.0.1:Data.Time.Format.Parse):
    Deprecated: "use "parseTimeM True" instead"
[ 2 of 36] Compiling Network.MPD.Core.Error ( src/Network/MPD/Core/Error.hs, dist/build/Network/MPD/Core/Error.o )

src/Network/MPD/Core/Error.hs:18:1: warning: [-Wdeprecations]
    Module ‘Control.Monad.Error’ is deprecated:
      Use Control.Monad.Except instead

src/Network/MPD/Core/Error.hs:48:10: warning: [-Wdeprecations]
    In the use of type constructor or class ‘Error’
    (imported from Control.Monad.Error, but defined in transformers-0.5.2.0:Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"

src/Network/MPD/Core/Error.hs:48:10: warning: [-Wdeprecations]
    In the use of type constructor or class ‘Error’
    (imported from Control.Monad.Error, but defined in transformers-0.5.2.0:Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"
[ 3 of 36] Compiling Network.MPD.Core.Class ( src/Network/MPD/Core/Class.hs, dist/build/Network/MPD/Core/Class.o )

src/Network/MPD/Core/Class.hs:17:1: warning: [-Wdeprecations]
    Module ‘Control.Monad.Error’ is deprecated:
      Use Control.Monad.Except instead
[ 4 of 36] Compiling Network.MPD.Core ( src/Network/MPD/Core.hs, dist/build/Network/MPD/Core.o )

src/Network/MPD/Core.hs:32:1: warning: [-Wdeprecations]
    Module ‘Control.Monad.Error’ is deprecated:
      Use Control.Monad.Except instead

src/Network/MPD/Core.hs:70:21: warning: [-Wdeprecations]
    In the use of type constructor or class ‘ErrorT’
    (imported from Control.Monad.Error, but defined in transformers-0.5.2.0:Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"

src/Network/MPD/Core.hs:100:29: warning: [-Wdeprecations]
    In the use of ‘runErrorT’
    (imported from Control.Monad.Error, but defined in transformers-0.5.2.0:Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"
[ 5 of 36] Compiling Network.MPD.Commands.Arg ( src/Network/MPD/Commands/Arg.hs, dist/build/Network/MPD/Commands/Arg.o )
[ 6 of 36] Compiling Network.MPD.Commands.Types ( src/Network/MPD/Commands/Types.hs, dist/build/Network/MPD/Commands/Types.o )
[ 7 of 36] Compiling Network.MPD.Commands.Parse ( src/Network/MPD/Commands/Parse.hs, dist/build/Network/MPD/Commands/Parse.o )

src/Network/MPD/Commands/Parse.hs:15:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()

src/Network/MPD/Commands/Parse.hs:16:1: warning: [-Wdeprecations]
    Module ‘Control.Monad.Error’ is deprecated:
      Use Control.Monad.Except instead
[ 8 of 36] Compiling Network.MPD.Commands.Query ( src/Network/MPD/Commands/Query.hs, dist/build/Network/MPD/Commands/Query.o )

src/Network/MPD/Commands/Query.hs:18:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
[ 9 of 36] Compiling Network.MPD.Applicative.Util ( src/Network/MPD/Applicative/Util.hs, dist/build/Network/MPD/Applicative/Util.o )
[10 of 36] Compiling Network.MPD.Applicative.Internal ( src/Network/MPD/Applicative/Internal.hs, dist/build/Network/MPD/Applicative/Internal.o )

src/Network/MPD/Applicative/Internal.hs:34:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()

src/Network/MPD/Applicative/Internal.hs:40:1: warning: [-Wdeprecations]
    Module ‘Control.Monad.Error’ is deprecated:
      Use Control.Monad.Except instead
[11 of 36] Compiling Network.MPD.Applicative.Output ( src/Network/MPD/Applicative/Output.hs, dist/build/Network/MPD/Applicative/Output.o )
[12 of 36] Compiling Network.MPD.Applicative.PlaybackControl ( src/Network/MPD/Applicative/PlaybackControl.hs, dist/build/Network/MPD/Applicative/PlaybackControl.o )
[13 of 36] Compiling Network.MPD.Applicative.PlaybackOptions ( src/Network/MPD/Applicative/PlaybackOptions.hs, dist/build/Network/MPD/Applicative/PlaybackOptions.o )
[14 of 36] Compiling Network.MPD.Applicative.Reflection ( src/Network/MPD/Applicative/Reflection.hs, dist/build/Network/MPD/Applicative/Reflection.o )
[15 of 36] Compiling Network.MPD.Applicative.Status ( src/Network/MPD/Applicative/Status.hs, dist/build/Network/MPD/Applicative/Status.o )

src/Network/MPD/Applicative/Status.hs:99:37: warning: [-Wtype-defaults]
    • Defaulting the following constraints to type ‘Double’
        (Read a0)
          arising from a use of ‘frac’
          at src/Network/MPD/Applicative/Status.hs:99:37-111
        (Fractional a0)
          arising from a use of ‘frac’
          at src/Network/MPD/Applicative/Status.hs:99:37-111
        (RealFrac a0)
          arising from a use of ‘round’
          at src/Network/MPD/Applicative/Status.hs:99:84-90
    • In the expression:
        frac $ \ x -> a {stTime = fmap ((, round x) . fst) (stTime a)}
      In a case alternative:
          "duration"
            -> frac $ \ x -> a {stTime = fmap ((, round x) . fst) (stTime a)}
      In the expression:
        case k of {
          "volume" -> vol $ \ x -> a {stVolume = x}
          "repeat" -> bool $ \ x -> a {stRepeat = x}
          "random" -> bool $ \ x -> a {stRandom = x}
          "single" -> bool $ \ x -> a {stSingle = x}
          "consume" -> bool $ \ x -> a {stConsume = x}
          "playlist" -> num $ \ x -> a {stPlaylistVersion = x}
          "playlistlength" -> num $ \ x -> a {stPlaylistLength = x}
          "state" -> state $ \ x -> a {stState = x}
          "song" -> int $ \ x -> a {stSongPos = Just x}
          "songid" -> int $ \ x -> a {stSongID = Just $ Id x}
          "nextsong" -> int $ \ x -> a {stNextSongPos = Just x}
          "nextsongid" -> int $ \ x -> a {stNextSongID = Just $ Id x}
          "time" -> time $ \ x -> a {stTime = Just x}
          "elapsed" -> frac $ \ x -> a {stTime = fmap (... . snd) (stTime a)}
          "duration"
            -> frac $ \ x -> a {stTime = fmap (... . fst) (stTime a)}
          "bitrate" -> int $ \ x -> a {stBitrate = Just x}
          "xfade" -> num $ \ x -> a {stXFadeWidth = x}
          "mixrampdb" -> frac $ \ x -> a {stMixRampdB = x}
          "mixrampdelay" -> frac $ \ x -> a {stMixRampDelay = x}
          "audio" -> audio $ \ x -> a {stAudio = x}
          "updating_db" -> num $ \ x -> a {stUpdatingDb = Just x}
          "error" -> Right (a {stError = Just (UTF8.toString v)})
          _ -> unexpectedPair }
[16 of 36] Compiling Network.MPD.Applicative.Stickers ( src/Network/MPD/Applicative/Stickers.hs, dist/build/Network/MPD/Applicative/Stickers.o )

src/Network/MPD/Applicative/Stickers.hs:29:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[17 of 36] Compiling Network.MPD.Applicative.StoredPlaylists ( src/Network/MPD/Applicative/StoredPlaylists.hs, dist/build/Network/MPD/Applicative/StoredPlaylists.o )

src/Network/MPD/Applicative/StoredPlaylists.hs:35:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[18 of 36] Compiling Network.MPD.Commands.Output ( src/Network/MPD/Commands/Output.hs, dist/build/Network/MPD/Commands/Output.o )
[19 of 36] Compiling Network.MPD.Commands.PlaybackControl ( src/Network/MPD/Commands/PlaybackControl.hs, dist/build/Network/MPD/Commands/PlaybackControl.o )
[20 of 36] Compiling Network.MPD.Commands.PlaybackOptions ( src/Network/MPD/Commands/PlaybackOptions.hs, dist/build/Network/MPD/Commands/PlaybackOptions.o )
[21 of 36] Compiling Network.MPD.Commands.Reflection ( src/Network/MPD/Commands/Reflection.hs, dist/build/Network/MPD/Commands/Reflection.o )
[22 of 36] Compiling Network.MPD.Commands.Status ( src/Network/MPD/Commands/Status.hs, dist/build/Network/MPD/Commands/Status.o )
[23 of 36] Compiling Network.MPD.Commands.Stickers ( src/Network/MPD/Commands/Stickers.hs, dist/build/Network/MPD/Commands/Stickers.o )
[24 of 36] Compiling Network.MPD.Commands.StoredPlaylists ( src/Network/MPD/Commands/StoredPlaylists.hs, dist/build/Network/MPD/Commands/StoredPlaylists.o )
[25 of 36] Compiling Network.MPD.Applicative.Database ( src/Network/MPD/Applicative/Database.hs, dist/build/Network/MPD/Applicative/Database.o )

src/Network/MPD/Applicative/Database.hs:17:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[26 of 36] Compiling Network.MPD.Commands.Database ( src/Network/MPD/Commands/Database.hs, dist/build/Network/MPD/Commands/Database.o )
[27 of 36] Compiling Network.MPD.Applicative.CurrentPlaylist ( src/Network/MPD/Applicative/CurrentPlaylist.hs, dist/build/Network/MPD/Applicative/CurrentPlaylist.o )
[28 of 36] Compiling Network.MPD.Commands.CurrentPlaylist ( src/Network/MPD/Commands/CurrentPlaylist.hs, dist/build/Network/MPD/Commands/CurrentPlaylist.o )

src/Network/MPD/Commands/CurrentPlaylist.hs:43:1: warning: [-Wdeprecations]
    Module ‘Control.Monad.Error’ is deprecated:
      Use Control.Monad.Except instead
[29 of 36] Compiling Network.MPD.Applicative.Connection ( src/Network/MPD/Applicative/Connection.hs, dist/build/Network/MPD/Applicative/Connection.o )
[30 of 36] Compiling Network.MPD.Commands.Connection ( src/Network/MPD/Commands/Connection.hs, dist/build/Network/MPD/Commands/Connection.o )
[31 of 36] Compiling Network.MPD.Applicative.ClientToClient ( src/Network/MPD/Applicative/ClientToClient.hs, dist/build/Network/MPD/Applicative/ClientToClient.o )

src/Network/MPD/Applicative/ClientToClient.hs:28:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[32 of 36] Compiling Network.MPD.Commands.ClientToClient ( src/Network/MPD/Commands/ClientToClient.hs, dist/build/Network/MPD/Commands/ClientToClient.o )
[33 of 36] Compiling Network.MPD.Commands ( src/Network/MPD/Commands.hs, dist/build/Network/MPD/Commands.o )
[34 of 36] Compiling Network.MPD.Commands.Extensions ( src/Network/MPD/Commands/Extensions.hs, dist/build/Network/MPD/Commands/Extensions.o )
[35 of 36] Compiling Network.MPD.Applicative ( src/Network/MPD/Applicative.hs, dist/build/Network/MPD/Applicative.o )
[36 of 36] Compiling Network.MPD      ( src/Network/MPD.hs, dist/build/Network/MPD.o )
Creating package registration file:
/tmp/pkgConf-libmpd-0.9.0959997301485560280.7
Installing library in
/home/namo/.cabal/lib/x86_64-linux-ghc-8.0.2/libmpd-0.9.0.7-JDyzzP1DypwGj8W0fpZJ0o
Registering libmpd-0.9.0.7...
cabal: Leaving directory '/tmp/cabal-tmp-30357/libmpd-0.9.0.7'
